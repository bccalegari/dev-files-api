services:
  devfiles-postgres:
    image: postgres:16-alpine
    container_name: devfiles-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=devfiles
      - POSTGRES_USER=devfiles
      - POSTGRES_PASSWORD=123
    ports:
      - "5432:5432"
    volumes:
      - devfiles-postgres-data:/var/lib/postgresql/data
    networks:
      devfiles-network:
        aliases:
          - devfiles-api
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U devfiles" ]
      interval: 10s
      timeout: 5s
      retries: 5

  devfiles-rabbitmq1:
    build:
      context: rabbitmq
      dockerfile: Dockerfile
    hostname: devfiles-rabbitmq1
    container_name: devfiles-rabbitmq1
    environment:
      RABBITMQ_NODENAME: devfiles-rabbitmq@devfiles-rabbitmq1
      RABBITMQ_ERLANG_COOKIE: devfiles123
      RABBITMQ_DEFAULT_USER: devfiles
      RABBITMQ_DEFAULT_PASS: 123
      NOTIFICATION_SERVICE_USER: notification
      NOTIFICATION_SERVICE_PASS: 123
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      rabbitmq-cluster:
        aliases:
          - devfiles-rabbitmq1
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmqctl node_health_check" ]
      interval: 10s
      timeout: 5s
      retries: 5

  devfiles-rabbitmq2:
    build:
      context: rabbitmq
      dockerfile: Dockerfile
    hostname: devfiles-rabbitmq2
    container_name: devfiles-rabbitmq2
    environment:
      RABBITMQ_NODENAME: devfiles-rabbitmq@devfiles-rabbitmq2
      RABBITMQ_ERLANG_COOKIE: devfiles123
      RABBITMQ_DEFAULT_USER: devfiles
      RABBITMQ_DEFAULT_PASS: 123
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      rabbitmq-cluster:
        aliases:
          - devfiles-rabbitmq2

  devfiles-redis:
    image: redis:6-alpine
    container_name: devfiles-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      devfiles-network:
        aliases:
          - devfiles-redis
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  devfiles-api:
    build:
      context: .
      dockerfile: Dockerfile-dev
    env_file:
      - .env
    container_name: devfiles-api
    restart: unless-stopped
    volumes:
      - .:/api
      - ~/.m2:/root/.m2
    ports:
      - "8080:8080"
      - "35729:35729"
      - "5005:5005"
    networks:
      devfiles-network:
        aliases:
          - devfiles-api
      rabbitmq-cluster:
        aliases:
          - devfiles-api
    depends_on:
      devfiles-postgres:
        condition: service_healthy
      devfiles-rabbitmq1:
        condition: service_healthy
      devfiles-redis:
        condition: service_healthy

networks:
  devfiles-network:
    name: devfiles-network
    driver: bridge
    external: true
  rabbitmq-cluster:
    name: rabbitmq-cluster
    driver: bridge
    external: true

volumes:
  devfiles-postgres-data:
    name: devfiles-postgres-data